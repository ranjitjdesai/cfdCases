/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2206                                  |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      binary;
    arch        "LSB;label=32;scalar=64";
    class       volScalarField;
    location    "0";
    object      alpha.water;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [0 0 0 0 0 0 0];

internalField   uniform 0;

boundaryField
{
    inlet
    {
        type            variableHeightFlowRate;
        lowerBound      0;
        upperBound      1;
        value           uniform 1;
        /*
        type            codedFixedValue;
        value           uniform 0;
        name            inletWaterPatch;
        code            #{
            
                const fvPatch& patch = this->patch(); //pointer calling patch()
                const vectorField& cf = patch.Cf(); //gives access to face centers
                scalarField& field = *this; //defines a scalar field named "field" to patch
                
                //define water surface elevation h
                const scalar hIn = 13.9; 

                forAll(cf, i)
                {
                    if(cf[i].z()<= hIn) //change y to z for 3D
                    {
                        field[i] = 1;
                    }
                    else
                    {
                        field[i] = 0;
                    }
                 
                }
         #};
         */
               
        //ORIGINAL
        //type            fixedValue;
        //value           uniform 1;
    }
    outlet
    {
        /*type            variableHeightFlowRate;
        lowerBound      0;
        upperBound      1;
        value           uniform 0;
	*/
        //ORIGINAL
        type            zeroGradient;
    }
    walls
    {
        type            zeroGradient;
    }
    top
    {
        type            inletOutlet;
        inletValue      uniform 0;
        value           uniform 0;
    }
    
    /*baffles
    {
        type            zeroGradient;
    }
    vents
    {
        type            zeroGradient;
    }*/

}


// ************************************************************************* //
